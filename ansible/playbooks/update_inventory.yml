---
- name: Actualizar inventario de Ansible y ejecutar tareas
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Ejecutar script para generar inventario
      command: /home/administrador/Documentos/Repositorios/tfg_app_web_proyecto/venv/bin/python3.12 ../scripts/generate_inventory.py
      register: inventory_output
      delegate_to: localhost

    - name: Depurar salida del script de inventario
      debug:
        var: inventory_output.stdout

    - name: Cargar inventario dinámico
      set_fact:
        dynamic_inventory: "{{ inventory_output.stdout | from_yaml }}"

    - name: Depurar inventario dinámico
      debug:
        var: dynamic_inventory

    - name: Crear contenido del archivo de inventario
      set_fact:
        inventory_content: |
          [warning]
          {% for host, info in dynamic_inventory.items() if info.warning %}
          {{ host }} ansible_host={{ info.ansible_host }} mac_address={{ info.mac_address }} status={{ info.status }} warning={{ info.warning }} exam_mode={{ info.exam_mode }}
          {% endfor %}

          [offline]
          {% for host, info in dynamic_inventory.items() if not info.status and not info.warning %}
          {{ host }} ansible_host={{ info.ansible_host }} mac_address={{ info.mac_address }} status={{ info.status }} warning={{ info.warning }} exam_mode={{ info.exam_mode }}
          {% endfor %}

          [online]
          {% for host, info in dynamic_inventory.items() if info.status and not info.warning and not info.exam_mode %}
          {{ host }} ansible_host={{ info.ansible_host }} mac_address={{ info.mac_address }} status={{ info.status }} warning={{ info.warning }} exam_mode={{ info.exam_mode }}
          {% endfor %}

          [examMode]
          {% for host, info in dynamic_inventory.items() if info.status and not info.warning and info.exam_mode %} 
          {{ host }} ansible_host={{ info.ansible_host }} mac_address={{ info.mac_address }} status={{ info.status }} warning={{ info.warning }} exam_mode={{ info.exam_mode }}
          {% endfor %}

    - name: Guardar el inventario en un archivo
      copy:
        content: "{{ inventory_content }}"
        dest: "../inventories/dynamic_inventory.ini"

    - name: Actualizar inventario
      add_host:
        name: "{{ item.key }}"
        ansible_host: "{{ item.value.ansible_host }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        mac_address: "{{ item.value.mac_address }}"
      with_dict: "{{ dynamic_inventory }}"
